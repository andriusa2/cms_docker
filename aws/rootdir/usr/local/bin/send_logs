#!/usr/bin/env python
import boto3
import requests
import os
import time

LOG_PATH = '/var/local/log/cms'
BUCKET_NAME = 'lmio-cms-logs'
NGINX_LOG_PATH = '/var/log/nginx'

def send_logs():
    instance_id = requests.get('http://169.254.169.254/latest/meta-data/instance-id').text
    
    ec2 = boto3.client('ec2', region_name='eu-west-1')
    instance_tags = ec2.describe_instances(InstanceIds=[instance_id])['Reservations'][0]['Instances'][0]['Tags']
    instance_tags_dict = {a['Key']: a['Value'] for a in instance_tags}
    instance_role = instance_tags_dict.get('Role', 'misc')
    contest_name = instance_tags_dict.get('Contest', 'lmioNA')
    
    s3 = boto3.resource('s3')
    bucket = s3.Bucket(BUCKET_NAME)
    upload_timestamp = str(int(time.time()))
    for root, _, files in os.walk(LOG_PATH):
        if not files:
            continue
        for f in files:
            if not os.path.islink(os.path.join(root, f)):
                bucket.upload_file(
                    Filename=os.path.join(root, f),
                    Key='/'.join([contest_name, instance_role, instance_id, upload_timestamp, root.rsplit('/', 1)[-1], f])
                )
    # grab nginx configs as well
    for root, _, files in os.walk(NGINX_LOG_PATH):
        if not files:
            continue
        for f in files:
            if not os.path.islink(os.path.join(root, f)):
                bucket.upload_file(
                    Filename=os.path.join(root, f),
                    Key='/'.join([contest_name, instance_role, instance_id, upload_timestamp, root.rsplit('/', 1)[-1], f])
                )

if __name__ == '__main__':
    send_logs()